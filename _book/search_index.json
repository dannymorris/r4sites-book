[["content.html", "Chapter 7 Authoring content 7.1 How it works 7.2 Example posts 7.3 Create a new post 7.4 Add a summary 7.5 Add a table of contents 7.6 Add code highlighting 7.7 Add tags and categories 7.8 Enable Disqus comments", " Chapter 7 Authoring content This chapter provides general guidance on authoring content such as blog posts, tutorials, research articles, and project write-ups. 7.1 How it works New content can be authored using either R Markdown or plain Markdown documents. My recommendation is to always opt for R Markdown. R Markdown is very similar to plain Markdown with one massive exception: R Markdown supports the integration and execution of R, Python, and SQL code inside the document. This means you can render dynamic output, such as tables, interactive graphs, and geospatial maps, in your content using these programming languages. For this reason, R Markdown is substantially more flexible than plain Markdown for writing technical content. To learn more about R Markdown, I recommend reading R Markdown: The Definitive Guide. 7.2 Example posts The following posts on the Posts page of the demo website are meant to teach you my approach to authoring posts using R Markdown and configuring the post metadata to activate useful features such as code highlighting. Using R in R Markdown - Post includes a table of contents and code highlighting. Content covers interactive HTML tables via the DT package, and interactive plots via the plotly package. (&lt;/&gt; Code) (üìÑ Page) Using Python in R Markdown - Post includes a table of contents and code highlighting. Content covers the use of Conda environments, inserting and executing Python code chunks, and displaying plots. (&lt;/&gt; Code) (üìÑ Page) Using SQL in R Markdown - Post includes a table of contents and code highlighting. Content covers inserting and executing pure SQL code chunks and using R to execute SQL queries. (&lt;/&gt; Code) (üìÑ Page) Basic Markdown syntax - Post includes a table of contents. Content covers basic Markdown syntax. (&lt;/&gt; Code) (üìÑ Page) 7.3 Create a new post The Posts page is the designated home for your content. This is where you can include your blog posts, tutorials, research articles, project descriptions, or other creative content. The simplest way to add a new post is via the ‚ÄúNew post‚Äù RStudio Addin. Follow the steps below to create a new post using this approach: Select the RStudio Addin labeled ‚ÄúNew post.‚Äù üì∑ Image. Configure the new post by specifying the post Title, Author, Date, Subdirectory, and Format. Do not specify Tags and Categories at this point. Be sure to place the new post in the post Subdirectory and set the Format to R Markdown (.Rmd). üì∑ Image. Update and create parameters in the post metadata including title, author, summary, date, output, Tags, and Categories. Learn more by viewing the source code for the example posts described in the next section. 7.4 Add a summary 7.5 Add a table of contents Add a table of contents to your R Markdown post to improve navigation and enable an overall better user experience. To add a table of contents, edit the output parameter in the document metadata. &lt;/&gt; Code 7.6 Add code highlighting Add code highlighting to improve the readability of your code snippets. To add code highlighting, edit the output parameter in the document metadata. &lt;/&gt; Code Though I recommend the tango highlighting scheme, other options options are available. 7.7 Add tags and categories Add ‚Äútags‚Äù and ‚Äúcategories‚Äù to your posts to organize your content and to give Google crawlers an idea of what your blog post is about. According to this website, strive to attach no more than 5-10 categories and 5-10 tags to each post. To add tags and categories to your post, edit the Tags adn Categories parameters in the document metadata. &lt;/&gt; Code 7.8 Enable Disqus comments "]]
