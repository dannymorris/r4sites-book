[["generate.html", "Chapter 4 Generating your website 4.1 Prerequisites 4.2 How it works 4.3 Use case 4.4 Generate your site 4.5 Serve the website locally 4.6 Next steps", " Chapter 4 Generating your website This chapter teaches you the three basic steps to generate your initial website, the first and most influential step in your journey to owning your very own website. Note: This chapter and all subsequent chapters will use the default Hugo Anatole theme as the basis for creating, publishing, and analyzing a customized alternative. The finished product can be found here - https://r4sites-anatole-custom.netlify.app/. 4.1 Prerequisites Before you proceed, complete the following prerequisites: Install R Install RStudio (optional) Discover your style My recommendation is to download the latest versions, which at the time of this writing are R 4.0 and RStudio 1.4. 4.2 How it works The R package blogdown in tandem with RStudio make it incredibly simple to generate your initial website. Under the hood, blogdown uses Hugo to generate static websites. Hugo websites are fast and developer-friendly, and Hugo developers have contributed a wide range of beautiful, free, pre-built design themes for you to use in your website project. 4.3 Use case This chapter, and all subsequent chapters, will build upon the default Hugo Anatole theme. The finished product can be seen here - https://r4sites-anatole-demo.netlify.app/ 4.4 Generate your site Follow these steps to generate a Hugo website using R and RStudio: Launch RStudio and install the blogdown package by running install.packages(\"blogdown\") in the R console. Create a new RStudio Project by going to File &gt; New Project &gt; New Directory &gt; Website using blogdown. üì∑ Image. Configure the website to use the Anatole theme, as show in this example configuration. Make sure to set the Hugo theme parameter to lxndrblz/anatole. Click Create Project to generate the website. To use a different Hugo theme, locate and select the theme in the list of Hugo themes. Click ‚ÄúDownload‚Äù on the theme homepage to be taken to the source code on GitHub (üì∑ Image). Copy the user/theme-name in the GitHub URL, then add this information to the Hugo theme parameter in the website cofiguration. For example, if the source code is located at https://github.com/devcows/hugo-universal-theme, insert devcows/hugo-universal-theme into the Hugo theme parameter. 4.5 Serve the website locally The blogdown package includes a handy function called serve_site(). Running this function in the R console with your website‚Äôs RStudio Project loaded will render a local copy of your entire website in the RStudio ‚ÄúViewer‚Äù pane, as shown in this example. The best part of this feature is that as you make and save changes to your website files, the local rendering will update in real-time and reflect your changes. This feature of blogdown, known as LiveReload, enables rapid trial and error on your local machine without ever having to leave the RStudio environment. 4.6 Next steps Proceed with fine tuning the look and feel of your website to learn how to add flavor to your website and capture your personal style. "]]
