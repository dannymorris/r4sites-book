[["pages-features.html", "Chapter 6 Configuring pages and features 6.1 Rename pages 6.2 Delete pages 6.3 Update the About page 6.4 Delete default posts 6.5 Delete language translations 6.6 Configure contact forms 6.7 Customizing contact forms", " Chapter 6 Configuring pages and features Now that you have generated a website and (optionally) tuned the look and feel, this chapter teaches you how to configure, update, and delete certain features that are unlikely to be updated very frequently. These features include page names, the About page, default posts, language translations, and contact forms. 6.1 Rename pages The Hugo Anatole theme comes with the following pages by default: Home, Posts, About, and Contact. To rename these pages, open config/_default/menus.en.toml and edit the name parameters accordingly. For example, rename the “About” page to “About Me” to clearly communicate that this page contains your personal biography. &lt;/&gt; Code 6.2 Delete pages To delete a page, open config/_default/menus.en.toml and delete all references to the page you want to delete. For example, to delete the Contact page, delete lines 19-23 in the menus.en.toml file. &lt;/&gt; Code 6.3 Update the About page The Hugo Anatole theme comes with a default About page. To edit the About page, navigate to content/english/about.md. Replace the metadata (i.e. the parameters in between the --- markers) then replace the body of the document using plain Markdown. &lt;/&gt; Code. 6.4 Delete default posts The Hugo Anatole theme comes with several default posts. To delete all default posts, navigate to the content/english/post folder and delete all files and folders except _index.md. &lt;/&gt; Code 6.5 Delete language translations By default, the Anatole theme supports English and Arabic language translations. To remove all content for a given translation, complete the following steps. Delete the file config/_default/menus.TRANSLATION.toml. Edit the file config/_default/languages.toml by removing all references to the appropriate language parameters. &lt;/&gt; Code Delete the folder content/TRANSLATION/ and all of its contents. 6.6 Configure contact forms Contact forms are a feature of the default Hugo Anatole theme, though they are not a feature of all Hugo themes. Contact forms are handy for collecting user emails and soliciting feedback from your website visitors. The contact form on the Contact page of the default Hugo Anatole theme is powered by Formspree. Formspree is not the only contact form provider, though it seems many Hugo themes integrate Formspree. Formspree’s web app offers a user-friendly interface for creating and managing contact forms, viewing form submissions, and exporting user data in CSV format. If you ever want to do a “subscriber only” email campaign, contact forms are a great option for collecting emails. Follow the steps below to create a Formspree form “endpoint” and link it to the contact form on your website. Sign in to Formspree. Click “New Project” to create a new project for your website. 📷 Image. Click “New Form” to create a new contact form. 📷 Image Copy the form’s “endpoint” beginning with https://. 📷 Image Open config/_default/params.toml in the main webiste folder, uncomment the contactFormAction parameter, and insert the form endpoint. &lt;/&gt; Code. Viewing your form submissions Once your contact form endpoint is configured, submissions to your contact form can be viewed in your Formspree account. Sign in to Formspree, locate your form, and select “Submissions” to view and (optionally) export your submissions. 📷 Image 6.7 Customizing contact forms The contact form on the default Hugo Anatole theme includes fields for Name, Email, and Message. These defaults are likely to work for most use cases, however it is possible to create new fields. To edit the contact form on the Hugo Anatole theme, open themes/anatole/layouts/partials/contact.html and themes/anatole/i18n/en.toml in the RStudio editor. To add a new field to the contact form, such as an optional “Job Title” field, update the contact.html file with a new input (&lt;/&gt; Code) and update the i18n/en.toml file with an associated placeholder (&lt;/&gt; Code). "]]
