[["creating-content.html", "Chapter 4 Creating Content 4.1 Adding posts 4.2 Example R Markdown post 4.3 Example Markdown post", " Chapter 4 Creating Content This chapter provides some general guidance on creating content, such as blog posts, using standard R Markdown as well as standard Markdown. By this point, you should have created a new blogdown site with your preferred theme. In this chapter, we will continue to build on the website that was created in the previous chapter, which uses the Anatole theme. To view the finished product, visit https://example-anatole.netlify.app/ 4.1 Adding posts As the website developer, new content you create will typically be in the form of a post. Common types of posts are blog entries, tutorials, portfolio entries, project documentation, and so on. With blogdown, posts can either be R Markdown documents or plain Markdown documents. The only difference between the two is that R Markdown enables you to insert and execute R code and display the output in the post body in addition to plain Markdown syntax. Markdown, on the other hand, is static content that cannot execute code. The recommended way to add a blog post is with the RStudio Addin labeled “New post,” as shown in this example. This addin will display a simple GUI for configuring the metadata for your new post including the post title, author, date, tags, content type and more. This example post configuration generates a R Markdown post destined for the post subdirectory. The archetype, filename, slug, and language are handled automatically and require no changes. 4.2 Example R Markdown post Before you create a new post, go ahead and run blogdown::serve_site() in the R console. This will launch your website locally and will update automatically whenever edits are saved. This is key for rapid development and iteration. If you haven’t already, leverage this example post configuration to create a new post from an R Markdown document. The default document contains limited metadata and no body content. What to include is ultimately a matter of personal preference, but this R Markdown post provides a great starting point with some handy features including syntax highlighting, table of contents, and message/warning suppression. The published version of this post can be viewed here - https://example-anatole.netlify.app/post/2021-04-22-writing-a-post-using-r-markdown/ 4.3 Example Markdown post Unlike R Markdown, plain Markdown documents render static content only (e.g. text, images, multimedia) and cannot execute code. If your post does not need to execute code and render its ouput, then author the post using plain Markdown. To configure a plain Markdown post, follow this example post configuration but change the Format parameter to Markdown instead of R Markdown. This example Markdown post should get you started. The published version of this post can be viewed here - https://example-anatole.netlify.app/post/2021-04-22-example-plain-markdown-post/ "]]
