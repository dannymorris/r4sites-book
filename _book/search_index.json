[["designing-your-website.html", "Chapter 3 Designing your website 3.1 Selecting a Hugo theme 3.2 Editing your theme", " Chapter 3 Designing your website This chapter provides some tips and tricks for designing the look and feel of your website to reflect your personal style and achieve your goals. Designing your website is your opportunity to be creative and artistic, but it can be a major pitfall if you’re not careful. The key to creating an appealling, sustainable website design is to select a Hugo theme (more on this later) that contains 90% or more of what you want your website to look and feel like without any modifications. The remaining 10% of your design can come from basic customizations to the theme such as colors, fonts, images, and simple tweaks to the HTML. Unless you are (or want to be) an expert in front end web development, trying to make too many customizations can result in you constantly struggling to compensate for any poor design choices you may have made. Note that website design is highly personal and subjective. There are no rules or requirements. My goal with this chapter is to steer you towards some designs that I have found to be attractive, flexible, and sustainable, and to also empower you to discover new designs that are better suited to you and your goals. 3.1 Selecting a Hugo theme The look and feel of your website is largely determined by your choice of pre-built Hugo themes. Dozens of themes created by expert developers are freely available for you to use in your own website projecet. Once you find a theme you would like to try, you can specify this theme when you create a new blogdown website. 3.1.1 Recommended themes Depending on your goals, you may be more or less restricted to certain Hugo themes. For example, if you intend to create dynamic content (e.g. posts) from R Markdown documents that feature code, tables, and interactive visualizations, then you may find that certain themes do a poor job of rendering these types of output. On the other hand, if you intend to create static content using basic markdown and multimedia, you may not experience any content rendering issues with any of the themes you consider. Either way, you’ll likely go through a few rounds of trial and error before you settle on a theme that meets most or all of your needs. Tip: When browsing Hugo themes, pay attention to the date on which the theme was most recently updated. Example. It’s best to avoid themes that have not been updated in years. Here are some themes that I recommend based on performance, content rendering, and personal style preference. Recommended themes for content written in R Markdown Cupper - Simple, clean, readable, minimalist. Great for portfolios and writing. Tranquilpeak - Modern, clean layout. Easy to customize and very readable. Great for personal websites, blogs, and portfolios. Anatole - Similar to Tranquilpeak with a more sophisticated About page. Eureka - Clean, professional layout. Easy to customize. Great for portfolios and professional landing pages. Recommended themes for content written in standard markdown Hargo and Vex - Modern e-commerce themes for advertising and selling products Doks - Modern documentation theme Bigspring - Modern design for small businesses offering a particular service Pico - Modern design for promoting yourself and your work Hugo Product Launch - Simple layout for promoting an upcoming product Hugo Scroll - Simple, highly visual layout for promoting your services or expertise 3.1.2 Creating a website with your chosen theme To create a new blogdown website with a new Hugo theme, follow these steps: Browse the list of Hugo themes. Click on a theme you like, then click “Demo” to explore a complete example. Once you find something you really like, click “Download” on the theme homepage to be taken to the source code in GitHub. Example. To create a website with your chose theme, copy the user/theme-name in the GitHub URL. For example, if the source code is located at https://github.com/devcows/hugo-universal-theme, you’ll want to copy devcows/hugo-universal-theme. Follow the steps to create a new blogdown website. This time, configure the website to use your chosen theme instead of the default theme. For example, replace yihui/hugo-lithium with devcows/hugo-universal-theme to use your chosen theme. 3.2 Editing your theme In all likelihood, you will want to edit some aspects of the theme to alter the look and feel of your website. It’s important to note that themes are inconsistent in terms of their file structures and customization paths. Therefore, there is no universal approach to editing themes. There are, however, some common approaches to editing basic characteristics such as colors, font styles, and basic layouts. Those will be described in this section. Tip: Use the “Inspect” tool in your browser to edit CSS on the fly and experiment with design changes. Access this tool in the browser by right-clicking on the page element you want to edit (e.g. image, text, link) and click on “Inspect.” Example Let’s start with a use case focusing on the Anatole theme. To begin, follow the instructions outlined in creating a website with your chosen theme. Then, follow along with the steps below. To view the finished product, visit https://example-anatole.netlify.app/ Before you make any edits, go ahead and run blogdown::serve_site() in the R console. This will launch your website locally and will update automatically whenever edits are detected. Navigate to config/_default/languages.toml and edit your website’s title. The default text “My Blog” can be changed to something more informative. Example. Navigate to config/_default/params.toml and edit several parameters. Here is where you can edit the blog subtitle, Google Analytics tracking code, links to social media profiles, and more. Example. Naviage to static/images/ and replace profile.jpg with your own image. This will update the main thumbnail on the home page. Keep the file named profile.jpg so the theme will recognize your image. If the image dimensions seem off, navigate to themes/anatole/assets/css/style.css and edit the CSS properties. For this theme, you will need to edit the image dimensions here and here to accommodate varying screen sizes. Navigate to static/favicons/ and replace favicon.ico with your own favicon. The favicon is the tiny image that appears in the web browser tab for your website. To create a favicon from an image, visit https://favicon.io/favicon-converter/. Keep the file named favicon.ico in the same folder. Change the font properties. If you don’t like the default font, you can easily change it. For example, to use the Google Font Quicksand insert this line of code in the themes/anatole/layouts/partials/head.html file. Then, navigate to themes/anatole/assets/css/style.css and change the font property in the body element (example). You can also change basic font properties (e.g. size, color), but you will have to know what CSS class to change. Examples include p(example), .page-top .nav(example), and .page-top .nav a(example). Closing thoughts on editing themes Editing the look and feel of your website can be a lot of fun, but you must be careful not to go overboard. Here are some tips to keep in the back of your mind while you’re editing your theme: Whenever you make a change, check the result on wide and narrow screens. You can do this with the browser on your desktop by maximizing the browser width (wide screen) and decreasing the width to mimic a mobile device (narrow screen). Try not to edit the theme’s default layout. Instead, focus on colors, font, images, and content to reflect you personal style. After you make a change, carefully scrutinize the result and look for any unexpected consequences. "]]
