# Complete end-to-end example

This chapter is for those of you who would like to dive right into an example. If you work through the steps in this chapter, you will have end up with a complete, functioning website that you can tweak to taste.

The steps include:

1. Install software and create accounts
2. Create a basic website using the blogdown R package
3. Push the website files to GitHub
4. Deploy the website on Netlify
5. Set up Google Analytics to analyze traffic

## Install software

Start off by installing these free, open source tools if you haven’t already. My recommendation is to download the latest versions, which at the time of this writing are R 4.0, RStudio 1.4, Git 2.31.1, and Hugo 0.82.

- [R](https://cran.rstudio.com/)
- [RStudio](https://www.rstudio.com/products/rstudio/download/#download)
- [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)
- [Hugo](https://gohugo.io/getting-started/installing/#quick-install)

## Create accounts {#create-accounts}

Create free accounts with GitHub, Netlify, Google Analytics, and Formspree(optional). Start with GitHub first, then use your GitHub registration to sign up for a Netlify account. To sign up for Google Analytics, click the link below and locate “Start for free” on the landing page. Formspree is optional yet recommended if you want to embed contact forms on your website.

- [GitHub](https://github.com/)
- [Netlify](https://app.netlify.com/)
- [Google Analytics](https://marketingplatform.google.com/about/analytics/)
- (Optional) [Formspree](https://formspree.io/register)

## Create a blogdown website {#create-new-blogdown}

[blogdown](https://bookdown.org/yihui/blogdown/) makes it super easy to create a website based on the Hugo framework. Follow these steps to create a website on your local machine.

1. Launch RStudio and install the blogdown package by running `install.packages("blogdown")`.

2. Create a new RStudio Project by going to File > New Project > New Directory > Website using blogdown

3. Configure the website accordingly, then click Create Project. [Example](https://i.imgur.com/Io2Bzw7.png)

4. Confirm that everything is working properly by running `blogdown::serve_site()`. A preview of your website should appear in the Viewer pane in RStudio.

## Push the website to GitHub

Once your site is working locally, the next steps are to create a remote GitHub repository for your website, configure a local Git repository, and push your website files from your local environment to the remote repository. Follow these steps to create a remote GitHub repository and sync it to your local Git repository.

1. Create a remote GitHub repository by signing in to [GitHub](https://github.com/) and clicking "New" in the Repositories section. Configure the repository accordingly, then click Create repository. [Example](https://i.imgur.com/LW2AhCr.png)

2. Create a local Git repository and associate it with the GitHub repository created in the previous step. To do this, launch Git from the command line (e.g. Git Bash on Windows, Terminal on Mac/Linux) and running the following Git commands. 

```
# initialize local Git repo
git init

# add your website files to the local Git repo
git add --all

# commit your website files to the local Git repo
git commit -m "first commit"

# point the local repo to the remote GitHub repo
# change your_username and your_repo to your GitHub username and repo name
git remote add origin https://github.com/your_username/your_repo.git

# push your files to GitHub
git push -u origin master
```

## Deploy the website on Netlify

Now that your website files are stored in your GitHub repository, use Netlify to deploy your website. Netlify will deploy your website directly from your GitHub repository. Any time you push new or edited content to the GitHub repo, Netlify will automatically deploy a new version of your website. This is known as continuous deployment and is key to rapid iteration. Follow these steps to deploy your website on Netlify.

1. Log in to Netlify account using your GitHub registration and click "New site from Git".

2. Select GitHub as the Continuous Deployment provider, then choose the Github repository you configured in the previous steps.

3. Leave the site settings alone and click "Deploy site" to publish your website. [Example](https://i.imgur.com/K4wmIJB.png)

4. After a few seconds, your webiste will be deployed on Netlify. To view your website, return to the Site Overview section and locate the domain name randomly generated by Netlify. [Example](https://i.imgur.com/8TV9NQ1.png). Netlify domains tend to look something like this - https://jovial-roentgen-f2a53c.netlify.app/.

## Set up Google Analytics

The final step is to set up Google Analytics to analyze traffic to your website. If you haven't already, be sure to [create a free account](#create-accounts). Follow these steps to link Google Analytics to your website.

1. Sign in to Google Analytics and navigate to Admin > Create Account. [Example](https://i.imgur.com/QRTa07k.png)

2. Under Account setup, provide an appropriate name (e.g. my-example-site) and configure the Account Data Sharing Settings to your liking. Click "Next".

3. Under Property setup, provide an appropriate name (e.g. example-site-property). 

4. Under Property setup, click on "Show advanced options" to create a Universal Analytics property. For the Website URL, provide the URL provided by Netlify when you first deployed your website. Click "Next". [Example](https://i.imgur.com/aYeAANl.png)

5. Under About you business, configure the settings to your liking. Click "Next" and accept the terms of service.

6. Locate and copy the Tracking Code by returning the Google Analytics landing page and navigating to the Admin console. Select the Account and Property that were created in the previous steps. Under Property, click on Tracking Info > Tracking Code. Copy the Tracking ID, which should appear in the form of UA-XXXXXXXXX-1. [Example](https://i.imgur.com/qcyaVBD.png)

7. Return to your RStudio Project where you are developing your website. Open the file `config.yaml` in the main directory and locate the `googleAnalytics:` parameter. Paste your Google Analytics Tracking ID here, e.g. `googleAnalytics: 'UA-XXXXXXXXX-1'`. [Example](https://i.imgur.com/xgN24ah.png)